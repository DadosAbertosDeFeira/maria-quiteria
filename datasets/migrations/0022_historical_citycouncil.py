# Generated by Django 3.1.1 on 2020-10-26 14:16

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("datasets", "0021_historicalcitycouncilattendancelist"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalCityCouncilRevenue",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Criado em"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Atualizado em"
                    ),
                ),
                ("crawled_at", models.DateTimeField(verbose_name="Coletado em")),
                ("crawled_from", models.URLField(verbose_name="Fonte")),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Anotações"),
                ),
                (
                    "external_code",
                    models.CharField(
                        db_index=True, max_length=10, verbose_name="Código externo"
                    ),
                ),
                (
                    "budget_unit",
                    models.PositiveIntegerField(
                        default=101, verbose_name="Unidade gestora"
                    ),
                ),
                (
                    "published_at",
                    models.DateField(
                        db_index=True, null=True, verbose_name="Publicado em"
                    ),
                ),
                (
                    "registered_at",
                    models.DateField(
                        db_index=True, null=True, verbose_name="Registrado em"
                    ),
                ),
                (
                    "revenue_type",
                    models.CharField(
                        choices=[
                            ("orcamentaria", "Orçamentária"),
                            ("nao_orcamentaria", "Não-orçamentária"),
                            ("transferencia", "Transferência"),
                        ],
                        db_index=True,
                        max_length=20,
                        verbose_name="Tipo da receita",
                    ),
                ),
                (
                    "modality",
                    models.CharField(
                        blank=True, max_length=60, null=True, verbose_name="Modalidade"
                    ),
                ),
                ("description", models.TextField(verbose_name="Descrição")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Valor"
                    ),
                ),
                (
                    "resource",
                    models.CharField(
                        blank=True,
                        default="prefeitura",
                        max_length=200,
                        null=True,
                        verbose_name="Fonte",
                    ),
                ),
                (
                    "legal_status",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=200,
                        null=True,
                        verbose_name="Natureza",
                    ),
                ),
                (
                    "destination",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Destinação"
                    ),
                ),
                (
                    "excluded",
                    models.BooleanField(default=False, verbose_name="Excluído?"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Câmara de Vereadores - Receita",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCityCouncilExpense",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Criado em"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Atualizado em"
                    ),
                ),
                ("crawled_at", models.DateTimeField(verbose_name="Coletado em")),
                ("crawled_from", models.URLField(verbose_name="Fonte")),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Anotações"),
                ),
                (
                    "published_at",
                    models.DateField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Publicado em",
                    ),
                ),
                (
                    "phase",
                    models.CharField(
                        choices=[
                            ("empenho", "Empenho"),
                            ("liquidacao", "Liquidação"),
                            ("pagamento", "Pagamento"),
                        ],
                        db_index=True,
                        max_length=20,
                        verbose_name="Fase",
                    ),
                ),
                (
                    "phase_code",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=20,
                        null=True,
                        verbose_name="Código da fase",
                    ),
                ),
                (
                    "company_or_person",
                    models.TextField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Empresa ou pessoa",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Valor"
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        null=True,
                        verbose_name="Número",
                    ),
                ),
                (
                    "document",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        null=True,
                        verbose_name="CNPJ ou CPF",
                    ),
                ),
                ("date", models.DateField(db_index=True, verbose_name="Data")),
                (
                    "process_number",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        null=True,
                        verbose_name="Número do processo",
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True, db_index=True, null=True, verbose_name="Descrição"
                    ),
                ),
                (
                    "legal_status",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=200,
                        null=True,
                        verbose_name="Natureza",
                    ),
                ),
                (
                    "function",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        null=True,
                        verbose_name="Função",
                    ),
                ),
                (
                    "subfunction",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        null=True,
                        verbose_name="Subfunção",
                    ),
                ),
                (
                    "resource",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=200,
                        null=True,
                        verbose_name="Fonte",
                    ),
                ),
                (
                    "subgroup",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=100,
                        null=True,
                        verbose_name="Subgrupos",
                    ),
                ),
                (
                    "group",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=100,
                        null=True,
                        verbose_name="Grupo",
                    ),
                ),
                (
                    "budget_unit",
                    models.PositiveIntegerField(
                        default=101, verbose_name="Unidade orçamentária"
                    ),
                ),
                (
                    "modality",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("convenio", "Convênio"),
                            ("tomada_de_precos", "Tomada de Preço"),
                            ("pregao", "Pregão"),
                            ("inexigibilidade", "Inexigibilidade"),
                            ("convite", "Convite"),
                            ("concorrencia", "Concorrência"),
                            ("dispensa", "Dispensa"),
                            ("isento", "Isento"),
                        ],
                        db_index=True,
                        max_length=50,
                        null=True,
                        verbose_name="Modalidade",
                    ),
                ),
                (
                    "excluded",
                    models.BooleanField(default=False, verbose_name="Excluído?"),
                ),
                (
                    "external_file_code",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código do arquivo (externo)",
                    ),
                ),
                (
                    "external_file_line",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        null=True,
                        verbose_name="Linha do arquivo (externo)",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Câmara de Vereadores - Despesa",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCityCouncilContract",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Criado em"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Atualizado em"
                    ),
                ),
                ("crawled_at", models.DateTimeField(verbose_name="Coletado em")),
                ("crawled_from", models.URLField(verbose_name="Fonte")),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Anotações"),
                ),
                (
                    "external_code",
                    models.PositiveIntegerField(
                        db_index=True, verbose_name="Código externo"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, db_index=True, null=True, verbose_name="Descrição"
                    ),
                ),
                (
                    "details",
                    models.TextField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Objeto do contrato",
                    ),
                ),
                (
                    "company_or_person_document",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=50,
                        null=True,
                        verbose_name="CNPJ ou CPF",
                    ),
                ),
                (
                    "company_or_person",
                    models.TextField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Empresa ou pessoa",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Valor"
                    ),
                ),
                (
                    "start_date",
                    models.DateField(db_index=True, verbose_name="Data de início"),
                ),
                (
                    "end_date",
                    models.DateField(db_index=True, verbose_name="Data final"),
                ),
                (
                    "excluded",
                    models.BooleanField(default=False, verbose_name="Excluído?"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Câmara de Vereadores - Contrato",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCityCouncilBid",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Criado em"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Atualizado em"
                    ),
                ),
                ("crawled_at", models.DateTimeField(verbose_name="Coletado em")),
                ("crawled_from", models.URLField(verbose_name="Fonte")),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Anotações"),
                ),
                (
                    "external_code",
                    models.CharField(
                        db_index=True, max_length=10, verbose_name="Código externo"
                    ),
                ),
                (
                    "modality",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("tomada_de_precos", "Tomada de Preço"),
                            ("pregao_presencial", "Pregão Presencial"),
                            ("pregao_eletronico", "Pregão Eletrônico"),
                            ("leilao", "Leilão"),
                            ("inexigibilidade", "Inexigibilidade"),
                            ("dispensada", "Dispensada"),
                            ("convite", "Convite"),
                            ("concurso", "Concurso"),
                            ("concorrencia", "Concorrência"),
                            ("chamada_publica", "Chamada Pública"),
                        ],
                        db_index=True,
                        max_length=60,
                        null=True,
                        verbose_name="Modalidade",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Código da licitação"
                    ),
                ),
                (
                    "code_type",
                    models.CharField(
                        db_index=True,
                        max_length=15,
                        verbose_name="Código do tipo da licitação",
                    ),
                ),
                (
                    "description",
                    models.TextField(db_index=True, verbose_name="Descrição (objeto)"),
                ),
                (
                    "session_at",
                    models.DateTimeField(
                        db_index=True, null=True, verbose_name="Sessão Data / Horário"
                    ),
                ),
                (
                    "excluded",
                    models.BooleanField(default=False, verbose_name="Excluído?"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Câmara de Vereadores - Licitação",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
